import couchdb, json

class CouchDBStorage:
    """A storage facility for data generated by simulation model.

    Data is buffered to save requestes to server.
    """

    def __init__(self, servername, dbname, bufferSize = 1000):
        """Initializes new instance of CouchDB storage.

        If specified database doesn't exist it will be created with all required
        views.

        Parameters:
        :servername: Network path to the target server, e.g. http://192.168.0.1:5984.
        :dbname: Name of database where to store results of simultaion.
        :bufferSize: Size of buffer of documents to send. Default values is 1000.
        """
        self.server = couchdb.Server(servername)
        if dbname not in self.server:
            self.db = self.server.create(dbname)
        else:
            self.db = self.server[dbname]
        self.bulk_queue = []
        self.bufferSize = bufferSize

    def add(self, time, data):
        d = dict(data)
        d['time'] = time
        d['type'] = 'state'
        d['_id'] = 'st_'+str(time)
        doc = couchdb.Document(d)

        self.bulk_queue.append(doc)
        if len(self.bulk_queue) >= self.bufferSize:
            self.dump()

    def dump(self):
        if len(self.bulk_queue) > 0:
            self.db.update(self.bulk_queue)
            self.bulk_queue = []

    def close(self):
        # couchdb for python doesn't have any 'close' methods, so just dump content.
        self.dump()
